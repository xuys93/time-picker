"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _addons = _interopRequireDefault(require("@storybook/addons"));

var _prism = require("react-syntax-highlighter/dist/esm/styles/prism");

var _jsx = _interopRequireDefault(require("react-syntax-highlighter/dist/esm/languages/prism/jsx"));

var _prismLight = _interopRequireDefault(require("react-syntax-highlighter/dist/esm/prism-light"));

var _createElement = _interopRequireDefault(require("react-syntax-highlighter/dist/esm/create-element"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var highlighterTheme = _objectSpread({}, _prism.darcula, {
  'pre[class*="language-"]': _objectSpread({}, _prism.darcula['pre[class*="language-"]'], {
    margin: 'auto',
    width: 'auto',
    height: 'auto',
    minHeight: '100%',
    overflow: 'hidden',
    boxSizing: 'border-box',
    display: 'flex',
    fontSize: 'inherit'
  }),
  'code[class*="language-"]': _objectSpread({}, _prism.darcula['code[class*="language-"]'], {
    margin: 0,
    fontFamily: 'inherit'
  })
});

_prismLight["default"].registerLanguage('jsx', _jsx["default"]);

var Source =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Source, _React$Component);

  function Source() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Source);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Source)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "createPart", function (rows, stylesheet, useInlineStyles) {
      return rows.map(function (node, i) {
        return (0, _createElement["default"])({
          node: node,
          stylesheet: stylesheet,
          useInlineStyles: useInlineStyles,
          key: "code-segement".concat(i)
        });
      });
    });

    _this.state = {
      text: ''
    };
    _this.onAddSource = _this.onAddSource.bind(_assertThisInitialized(_this));
    _this.lineRenderer = _this.lineRenderer.bind(_assertThisInitialized(_this));
    _this.createPart = _this.createPart.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Source, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var _this$props = this.props,
          channel = _this$props.channel,
          api = _this$props.api;
      channel.on('storybook/notes/add_source', this.onAddSource);
      this.stopListeningOnStory = api.onStory(function () {
        _this2.onAddSource('');
      });
    } // This is some cleanup tasks when the Source panel is unmounting.

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.stopListeningOnStory) {
        this.stopListeningOnStory();
      }

      this.unmounted = true;
      var channel = this.props.channel;
      channel.removeListener('storybook/notes/add_source', this.onAddSource);
    }
  }, {
    key: "onAddSource",
    value: function onAddSource(text) {
      this.setState({
        text: text
      });
    }
  }, {
    key: "lineRenderer",
    value: function lineRenderer(_ref) {
      var rows = _ref.rows,
          stylesheet = _ref.stylesheet,
          useInlineStyles = _ref.useInlineStyles;
      var _this$state = this.state,
          locationsMap = _this$state.locationsMap,
          locationsKeys = _this$state.locationsKeys;

      if (!locationsMap || !locationsKeys.length) {
        return this.createPart(rows, stylesheet, useInlineStyles);
      }

      var parts = this.createParts(rows, stylesheet, useInlineStyles);
      return _react["default"].createElement("span", null, parts);
    }
  }, {
    key: "render",
    value: function render() {
      var active = this.props.active;
      var text = this.state.text;
      return active ? _react["default"].createElement(_prismLight["default"], {
        language: "jsx",
        showLineNumbers: "true",
        style: highlighterTheme,
        renderer: this.lineRenderer,
        customStyle: {
          width: '100%'
        }
      }, text) : null;
    }
  }]);

  return Source;
}(_react["default"].Component);

exports["default"] = Source;

_addons["default"].register('storybook/source', function (api) {
  var channel = _addons["default"].getChannel();

  _addons["default"].addPanel('storybook/source/panel', {
    title: 'Source',
    render: function render(_ref2) {
      var active = _ref2.active;
      return _react["default"].createElement(Source, {
        channel: channel,
        api: api,
        active: active
      });
    }
  });
});