"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/es6.object.create");

require("core-js/modules/es6.object.set-prototype-of");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _coreEvents = require("@storybook/core-events");

var _components = require("@storybook/components");

var _shared = require("../shared");

var _Tabs = _interopRequireDefault(require("./Tabs"));

var _Report = _interopRequireDefault(require("./Report"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Passes =
/*#__PURE__*/
(0, _styled.default)("span", {
  target: "e1gxh7md0"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    color: theme.successColor
  };
});
var Violations =
/*#__PURE__*/
(0, _styled.default)("span", {
  target: "e1gxh7md1"
})(function (_ref2) {
  var theme = _ref2.theme;
  return {
    color: theme.failColor
  };
});
var PanelWrapper =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "e1gxh7md2"
})({
  height: '100%',
  overflow: 'auto',
  width: '100%'
});

var Panel =
/*#__PURE__*/
function (_Component) {
  _inherits(Panel, _Component);

  function Panel() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Panel);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Panel)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      passes: [],
      violations: []
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onUpdate", function (_ref3) {
      var passes = _ref3.passes,
          violations = _ref3.violations;

      _this.setState({
        passes: passes,
        violations: violations
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "requestCheck", function () {
      var _this$props = _this.props,
          channel = _this$props.channel,
          active = _this$props.active;

      if (active) {
        channel.emit(_shared.REQUEST_CHECK_EVENT_ID);
      }
    });

    return _this;
  }

  _createClass(Panel, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var channel = this.props.channel;
      channel.on(_shared.CHECK_EVENT_ID, this.onUpdate);
      channel.on(_coreEvents.STORY_RENDERED, this.requestCheck);
      channel.on(_shared.RERUN_EVENT_ID, this.requestCheck);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var active = this.props.active;

      if (!prevProps.active && active) {
        this.requestCheck();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var channel = this.props.channel;
      channel.removeListener(_shared.CHECK_EVENT_ID, this.onUpdate);
      channel.removeListener(_coreEvents.STORY_RENDERED, this.requestCheck);
      channel.removeListener(_shared.RERUN_EVENT_ID, this.requestCheck);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          passes = _this$state.passes,
          violations = _this$state.violations;
      var active = this.props.active;
      return active ? _react.default.createElement(PanelWrapper, null, _react.default.createElement(_Tabs.default, {
        tabs: [{
          label: _react.default.createElement(Violations, null, violations.length, " Violations"),
          panel: _react.default.createElement(_Report.default, {
            passes: false,
            items: violations,
            empty: "No a11y violations found."
          })
        }, {
          label: _react.default.createElement(Passes, null, passes.length, " Passes"),
          panel: _react.default.createElement(_Report.default, {
            passes: true,
            items: passes,
            empty: "No a11y check passed"
          })
        }]
      }), _react.default.createElement(_components.ActionBar, null, _react.default.createElement(_components.ActionButton, {
        onClick: this.requestCheck
      }, "RERUN TEST"))) : null;
    }
  }]);

  return Panel;
}(_react.Component);

_defineProperty(Panel, "propTypes", {
  active: _propTypes.default.bool.isRequired,
  channel: _propTypes.default.shape({
    on: _propTypes.default.func,
    emit: _propTypes.default.func,
    removeListener: _propTypes.default.func
  }).isRequired
});

var _default = Panel;
exports.default = _default;