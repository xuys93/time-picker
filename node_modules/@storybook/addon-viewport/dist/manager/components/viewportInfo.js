"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applyStyles = applyStyles;
exports.applyDefaultStyles = applyDefaultStyles;
exports.viewportsTransformer = exports.transformViewports = exports.resetViewport = exports.configuredStyles = void 0;

require("core-js/modules/es6.array.for-each");

require("core-js/modules/es6.array.filter");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.array.reduce");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var configuredStyles = {
  display: 'flex',
  boxShadow: 'rgba(0,0,0,0.2) 0px 0px 60px 12px'
};
exports.configuredStyles = configuredStyles;
var resetViewport = {
  name: 'Reset',
  styles: {
    width: '100%',
    height: '100%',
    border: 'none',
    display: 'block',
    boxShadow: 'none'
  }
};
exports.resetViewport = resetViewport;

function applyStyles(viewport, styles) {
  var mixedStyles = _objectSpread({}, styles, viewport.styles);

  return _objectSpread({}, viewport, {
    styles: mixedStyles
  });
}

function applyDefaultStyles(viewport) {
  return applyStyles(viewport, configuredStyles);
}

var transformViewports = function transformViewports(transformer) {
  return function (viewports) {
    return Object.keys(viewports).reduce(function (all, key) {
      return _objectSpread({}, all, _defineProperty({}, key, transformer(viewports[key])));
    }, {});
  };
};

exports.transformViewports = transformViewports;
var viewportsTransformer = transformViewports(applyDefaultStyles);
exports.viewportsTransformer = viewportsTransformer;