"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.array.filter");

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.array.is-array");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/es6.object.create");

require("core-js/modules/es6.object.set-prototype-of");

require("core-js/modules/es6.array.for-each");

require("core-js/modules/es6.regexp.split");

require("core-js/modules/es6.array.map");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.string.iterator");

require("core-js/modules/es6.array.from");

require("core-js/modules/es6.array.sort");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _components = require("@storybook/components");

var _jsx = _interopRequireDefault(require("react-syntax-highlighter/dist/esm/languages/prism/jsx"));

var _prism = require("react-syntax-highlighter/dist/esm/styles/prism");

var _prismLight = _interopRequireDefault(require("react-syntax-highlighter/dist/esm/prism-light"));

var _createElement = _interopRequireDefault(require("react-syntax-highlighter/dist/esm/create-element"));

var _events = require("./events");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// TODO: take from theme
var highlighterTheme = _objectSpread({}, _prism.darcula, {
  'pre[class*="language-"]': _objectSpread({}, _prism.darcula['pre[class*="language-"]'], {
    margin: 'auto',
    width: 'auto',
    height: 'auto',
    minHeight: '100%',
    overflow: 'hidden',
    boxSizing: 'border-box',
    display: 'flex',
    fontFamily: _components.monoFonts.fontFamily,
    fontSize: 'inherit'
  }),
  'code[class*="language-"]': _objectSpread({}, _prism.darcula['code[class*="language-"]'], {
    margin: 0,
    fontFamily: 'inherit'
  })
});

_prismLight.default.registerLanguage('jsx', _jsx.default);

var styles = {
  story: {
    display: 'block',
    textDecoration: 'none',
    color: _prism.darcula['code[class*="language-"]'].color
  },
  selectedStory: {
    backgroundColor: 'rgba(255, 242, 60, 0.2)'
  },
  panel: {
    width: '100%'
  }
};

var areLocationsEqual = function areLocationsEqual(a, b) {
  return a.startLoc.line === b.startLoc.line && a.startLoc.col === b.startLoc.col && a.endLoc.line === b.endLoc.line && a.endLoc.col === b.endLoc.col;
};

var getLocationKeys = function getLocationKeys(locationsMap) {
  return locationsMap ? Array.from(Object.keys(locationsMap)).sort(function (key1, key2) {
    return locationsMap[key1].startLoc.line - locationsMap[key2].startLoc.line;
  }) : [];
};

var StoryPanel =
/*#__PURE__*/
function (_Component) {
  _inherits(StoryPanel, _Component);

  function StoryPanel() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, StoryPanel);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      source: '// Here will be dragons 🐉'
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setSelectedStoryRef", function (ref) {
      _this.selectedStoryRef = ref;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "clickOnStory", function (kind, story) {
      var api = _this.props.api;

      if (kind && story) {
        api.selectStory(kind, story);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "createPart", function (rows, stylesheet, useInlineStyles) {
      return rows.map(function (node, i) {
        return (0, _createElement.default)({
          node: node,
          stylesheet: stylesheet,
          useInlineStyles: useInlineStyles,
          key: "code-segement".concat(i)
        });
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "createStoryPart", function (rows, stylesheet, useInlineStyles, location, kindStory) {
      var currentLocation = _this.state.currentLocation;
      var first = location.startLoc.line - 1;
      var last = location.endLoc.line;
      var storyRows = rows.slice(first, last);

      var story = _this.createPart(storyRows, stylesheet, useInlineStyles);

      var storyKey = "".concat(first, "-").concat(last);

      if (areLocationsEqual(location, currentLocation)) {
        return _react.default.createElement("div", {
          key: storyKey,
          ref: _this.setSelectedStoryRef,
          style: styles.selectedStory
        }, story);
      }

      var _kindStory$split = kindStory.split('@'),
          _kindStory$split2 = _slicedToArray(_kindStory$split, 2),
          selectedKind = _kindStory$split2[0],
          selectedStory = _kindStory$split2[1];

      var url = "/?selectedKind=".concat(selectedKind, "&selectedStory=").concat(selectedStory);
      return _react.default.createElement(_components.RoutedLink, {
        href: url,
        key: storyKey,
        onClick: function onClick() {
          return _this.clickOnStory(selectedKind, selectedStory);
        },
        style: styles.story
      }, story);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "createParts", function (rows, stylesheet, useInlineStyles) {
      var _this$state = _this.state,
          locationsMap = _this$state.locationsMap,
          locationsKeys = _this$state.locationsKeys;
      var parts = [];
      var lastRow = 0;
      locationsKeys.forEach(function (key) {
        var location = locationsMap[key];
        var first = location.startLoc.line - 1;
        var last = location.endLoc.line;

        var start = _this.createPart(rows.slice(lastRow, first), stylesheet, useInlineStyles);

        var storyPart = _this.createStoryPart(rows, stylesheet, useInlineStyles, location, key);

        parts.push(start);
        parts.push(storyPart);
        lastRow = last;
      });

      var lastPart = _this.createPart(rows.slice(lastRow), stylesheet, useInlineStyles);

      parts.push(lastPart);
      return parts;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "lineRenderer", function (_ref) {
      var rows = _ref.rows,
          stylesheet = _ref.stylesheet,
          useInlineStyles = _ref.useInlineStyles;
      var _this$state2 = _this.state,
          locationsMap = _this$state2.locationsMap,
          locationsKeys = _this$state2.locationsKeys;

      if (!locationsMap || !locationsKeys.length) {
        return _this.createPart(rows, stylesheet, useInlineStyles);
      }

      var parts = _this.createParts(rows, stylesheet, useInlineStyles);

      return _react.default.createElement("span", null, parts);
    });

    return _this;
  }

  _createClass(StoryPanel, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var channel = this.props.channel;
      channel.on(_events.EVENT_ID, function (_ref2) {
        var source = _ref2.source,
            currentLocation = _ref2.currentLocation,
            locationsMap = _ref2.locationsMap;
        var locationsKeys = getLocationKeys(locationsMap);

        _this2.setState({
          source: source,
          currentLocation: currentLocation,
          locationsMap: locationsMap,
          locationsKeys: locationsKeys
        });
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.selectedStoryRef) {
        this.selectedStoryRef.scrollIntoView();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var active = this.props.active;
      var source = this.state.source;
      return active ? _react.default.createElement(_prismLight.default, {
        language: "jsx",
        showLineNumbers: "true",
        style: highlighterTheme,
        renderer: this.lineRenderer,
        customStyle: styles.panel
      }, source) : null;
    }
  }]);

  return StoryPanel;
}(_react.Component);

exports.default = StoryPanel;
StoryPanel.propTypes = {
  active: _propTypes.default.bool.isRequired,
  api: _propTypes.default.shape({
    selectStory: _propTypes.default.func.isRequired
  }).isRequired,
  channel: _propTypes.default.shape({
    emit: _propTypes.default.func,
    on: _propTypes.default.func,
    removeListener: _propTypes.default.func
  }).isRequired
};